<%= render 'partial/header' %>
<div class="newcamera_outer">
<div class="newcamera_body">
<div class="headmessage"><p>今から<span class="headmessage--red">名刺の写真を撮影して</span>、名刺のデータを登録します。</p><br><small>この機能ではブラウザのカメラを利用いたします。<br>ブラウザに<span class="headmessage--red">「カメラへのアクセスの許可を求め」られた場合は、許可してください。</span><br>※今から撮影する写真を画像データとして保存することはありません。</small></div>

<!-- カメラ映像が描画されます。 -->
<video id="video_area" class="video_area_cls" style="background-color: #000" autoplay></video>

<!-- 押下するとカメラ映像から静止画をキャプチャします。 -->
<button id="video_area_btn" class="video_area_cls" onclick="copyFrame()">撮影 します</button>
<p class="video_area_cls">上の領域に名刺の全体が映るようにして、「撮影」ボタンを押してください</p>
<!-- キャプチャした静止画が描画されます。 -->
<canvas id="capture_image" class="capture_image_cls" style="display:block;"></canvas>
<br>
<button id="drawCanvas" class="capture_image_cls" style="display:none;" onclick="drawCanvas()">この画像を使用する</button>
<br>
<button id="rebertpic_btn" class="capture_image_cls" style="display:none;" onclick="rebertpic()">撮影をやりなおしたい</button>
<p class="capture_image_cls" style="display:none;">こちらの画像から文字を認識します。<br>よろしければ、<span class="capture_image_cls--red">「この画像を使用する」ボタン</span>をおしてください。<br>別の画像で認識したい場合は「撮影をやりなおしたい」ボタンを押してください。 </p>
<hr class="drawCanvas__after">
<p class="drawCanvas__after">こちらが<span class="drawCanvas__after--red">画像からの文字を認識した結果</span>です。(コピー & ペースト可能です。)</p>
<small class="drawCanvas__after">※こちらの認識結果のテキストデータを画像の代わりに保存いたします。</small>
<textarea name="base64result" class="drawCanvas__after drawCanvas__after__textarea" id="base64result" cols="100" rows="15" readonly="true"></textarea >

<p id="drawCanvas__after--message" class="drawCanvas__after"><span class="drawCanvas__after--red">下の欄に書き写してください。</span>この内容で、「名刺データを作成」ボタンを押して保存します。</p>
<%=form_with model: @card ,class:"drawCanvas__after drawCanvas__after__form",id:"#",local: true,url: {controller: 'cards', action: 'createdata' } do |f|%>
<div class="drawCanvas__after drawCanvas__after__form__row">
<%=f.label :名前,class:"drawCanvas__after drawCanvas__after__form--label"%>
<%=f.text_field :name,class:"drawCanvas__after drawCanvas__after--input", placeholder:"名前を入力"%>
</div>
<div class="drawCanvas__after drawCanvas__after__form__row">
<%=f.label :会社名,class:"drawCanvas__after drawCanvas__after__form--label"%>
<%=f.text_field :company,class:"drawCanvas__after drawCanvas__after--input", placeholder:"会社名を入力"%>
</div>
<div class="drawCanvas__after drawCanvas__after__form__row">
<%=f.label :部署名,class:"drawCanvas__after drawCanvas__after__form--label"%>
<%=f.text_field :department,class:"drawCanvas__after drawCanvas__after--input", placeholder:"部署名を入力"%>
</div>
<div class="drawCanvas__after drawCanvas__after__form__row">
<%=f.label :住所,class:"drawCanvas__after drawCanvas__after__form--label"%>
<%=f.text_field :address,class:"drawCanvas__after drawCanvas__after--input", placeholder:"住所を入力"%>
</div>
<div class="drawCanvas__after drawCanvas__after__form__row">
<%=f.label :電話番号,class:"drawCanvas__after drawCanvas__after__form--label"%>
<%=f.text_field :tel,class:"drawCanvas__after drawCanvas__after--input", placeholder:"電話番号を入力"%>
</div>
<div class="drawCanvas__after drawCanvas__after__form__row">
<%=f.label :メールアドレス,class:"drawCanvas__after drawCanvas__after__form--label"%>
<%=f.text_field :email,class:"drawCanvas__after drawCanvas__after--input", placeholder:"メールアドレスを入力"%>
</div>
<%=f.hidden_field :apiresulttext,class:"drawCanvas__after drawCanvas__after__form",id: "hiddenapiresulttext"%>
<%=f.hidden_field :apiresulthash,class:"drawCanvas__after drawCanvas__after__form"%>
<%=f.submit "名刺データを作成",id:"drawCanvas__after__form--submitbtn",class:"drawCanvas__after" %>
<%end%>
<script>

    // getUserMedia が使えないときは、『getUserMedia()が利用できないブラウザです！』と言ってね。
    if (typeof navigator.mediaDevices.getUserMedia !== 'function') {
        const err = new Error('getUserMedia()が利用できないブラウザです！');
        alert(`${err.name} ${err.message}`);
        throw err;
    }

    // 操作する画面エレメント変数定義します。
    const $video = document.getElementById('video_area');  // 映像表示エリア

    // スタートボタン押下まちでなく、このページが開かれたら(そしてDOMの読み込みが完了したら)カメラが起動します。
    document.addEventListener('DOMContentLoaded', () => {
        navigator.mediaDevices.getUserMedia({ video: true, audio: false })
        .then(stream => $video.srcObject = stream)
        .catch(err => alert(`${err.name} ${err.message}`));
    }, false);


    // 「静止画取得」ボタンが押されたら「<canvas id="capture_image">」に映像のコマ画像を表示します。
    function copyFrame() {

        var canvas_capture_image = document.getElementById('capture_image');
        var cci = canvas_capture_image.getContext('2d');
        var va = document.getElementById('video_area');

        canvas_capture_image.width  = va.videoWidth;
        canvas_capture_image.height = va.videoHeight;
        cci.drawImage(va, 0, 0);  // canvasに『「静止画取得」ボタン』押下時点の画像を描画。
        // debugger;
        // 撮影確認領域と撮影用ボタンを排除
        $('.video_area_cls').css('display','none');
        // $('.capture_image_cls').css('display','');
        $('.capture_image_cls').css('display','block');
        // $('#drawCanvas').css('display','');
        // $('#rebertpic_btn').css('display','');
        // $('#capture_image').css('display','');
    }
    function rebertpic(){
      // 取り直しボタンを押されたときの挙動
        $('.video_area_cls').css('display','');
        $('.capture_image_cls').css('display','none');
        // $('#capture_image').css('display','none');
        // $('#drawCanvas').css('display','none');
        // $('#rebertpic_btn').css('display','none');
        // $('#capture_image').css('display','none');
        $('.drawCanvas__after').css('display','none');
        $('.drawCanvas__after__form').css('display','none');
    }
    function drawCanvas(){
      // 使用する写真が決定したときの挙動
      // var canvas = document.getElementById('capture_image');
      var canvas = $('#capture_image').get(0);
      if (canvas.getContext){ // 未サポートブラウザでの実行を抑止
        var ctx = canvas.getContext('2d');
        // 描画用のコードを記述
      }
      console.log(canvas);
      console.log(canvas.html);
      console.log(ctx);
      // 取得した画像のbase64化
      var canvasbase64 = canvas.toDataURL('image/png');
      // var canvasbase64 = canvas.encode
      console.log(canvasbase64);
      // console.log(canvas.toDataURL('image/png'));

      var splited_canvasbase64 = canvasbase64.split(",");
      console.log(splited_canvasbase64.length);
      console.log("splited_canvasbase64[0]");
      console.log(splited_canvasbase64[0]);
      console.log("splited_canvasbase64[1]");
      console.log(splited_canvasbase64[1]);

      // ajax通信開始
      $.ajax({
      url: '/createajax',
      type: "POST",
      data: {test: splited_canvasbase64[1]},
      dataType: 'json',
      // processData: false,
      // contentType: false,
    }).done(function(data){
      // ajax通信完了後です。data.hashdescriptionには認識後の文字データが入っています。
      // フォームを出現させ、認識結果の表示と記入用フォームがでてきます。
      $('#base64result').css('display','block');
      $('#base64result').text(data.hashdescription);
      $('.drawCanvas__after').css('display','block');
      $('.drawCanvas__after__form').css('display','block');
      $('#drawCanvas').css('display','none');
      $('#hiddenapiresulttext').val(data.hashdescription);
      
      console.log("----#hiddenapiresulttext-----");
      console.log($('#hiddenapiresulttext').val());
    }).fail(function(){
      alert("エラーが発生しました。画像から文字を全く認識できなかった可能性があります。このメッセージの後、再度このページを再読み込みします。");
      location.reload();
    });
    }

</script>
</div>
</div>
<%= render 'partial/footer' %>
