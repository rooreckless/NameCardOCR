<%= render 'partial/header' %>
<%= render 'layouts/notifications' %>
<div class="newcamera_outer">
  <div class="newcamera_body">
    <div class="headmessage"><p>今から<span class="headmessage--red">名刺の写真を撮影して</span>、名刺のデータを登録します。</p><br><small>この機能ではブラウザのカメラを利用いたします。<br>ブラウザに<span class="headmessage--red">「カメラへのアクセスの許可を求め」られた場合は、許可してください。</span><br>※今から撮影する写真を画像データとして保存することはありません。</small>
    <br>
    <%if current_user.group_id==nil%>
      <p>なお、<span class="headmessage--red">撮影前にグループに登録していただくと</span>、同じグループの方同士で名刺を共有できます。グループ登録は<a href="/group/new">こちら</a>です。</p>
    <%else%>
      <p>これから作成する名刺データは、所属されている「<%=current_user.group.name%>」グループの方と共有します。グループ登録状況の確認は<a href="/group/new">こちら</a>です。</p>
    <%end%>
    </div>
    <div class=" newcamera__step1">
      <!-- カメラ映像が描画されます。 -->
      <video id="video_area" class="video_area_cls" style="background-color: #000" autoplay></video>

      <!-- 押下するとカメラ映像から静止画をキャプチャします。 -->
      <button id="video_area_btn" class="video_area_cls animationEmRed" onclick="go_step2()">撮影 します</button>
      <p class="video_area_cls">上の領域に名刺の全体が映るようにして、「撮影」ボタンを押してください</p>
    </div>
    <div class="newcamera__step2">
      <!-- キャプチャした静止画が描画されます。 -->
      <canvas id="capture_image" class="capture_image_cls""></canvas>
      <br>
      <button id="drawCanvas" class="capture_image_cls animationEmRed"" onclick="drawCanvas()">この画像を使用する</button>
      <br>
      <button id="rebertpic_btn" class="capture_image_cls"" onclick="rebert_step1()">撮影をやりなおしたい</button>
      <p class="capture_image_cls"">こちらの画像から文字を認識します。<br>よろしければ、<span class="capture_image_cls--red">「この画像を使用する」ボタン</span>を押してください。<br>別の画像で認識したい場合は「撮影をやりなおしたい」ボタンを押してください。 </p>
    <div>
    <div class="newcamera__step3">
      <hr class="drawCanvas__after">
      <p class="drawCanvas__after">こちらが<span class="drawCanvas__after--red">画像からの文字を認識した結果</span>です。(コピー & ペースト可能です。)</p>
      <small class="drawCanvas__after">※こちらの認識結果のテキストデータを画像の代わりに保存いたします。</small><br>
      <textarea name="base64result" class="drawCanvas__after drawCanvas__after__textarea" id="base64result" cols="100" rows="15" readonly="true"></textarea >
      <div class='drawCanvas__after__createbeforesearchresults newcamera__step3__warning' id="createbeforesearchresults"></div>
    </div>
    <div class="newcamera__step4">
      <p id="drawCanvas__after--message" class="drawCanvas__after"><span class="drawCanvas__after--red">下の欄に書き写してください。</span>この内容で、「名刺データを作成」ボタンを押して保存します。</p>
      <%=form_with model: @card ,class:"drawCanvas__after drawCanvas__after__form",id:"#",local: true,url: {controller: 'cards', action: 'createdata' } do |f|%>
      <div class="drawCanvas__after drawCanvas__after__form__row">
      <%=f.label :名前,class:"drawCanvas__after drawCanvas__after__form--label"%>
      <%=f.text_field :name,class:"drawCanvas__after drawCanvas__after--input", placeholder:"名前を入力"%>
      </div>
      <div class="drawCanvas__after drawCanvas__after__form__row">
      <%=f.label :会社名,class:"drawCanvas__after drawCanvas__after__form--label"%>
      <%=f.text_field :company,class:"drawCanvas__after drawCanvas__after--input", placeholder:"会社名を入力"%>
      </div>
      <div class="drawCanvas__after drawCanvas__after__form__row">
      <%=f.label :部署名,class:"drawCanvas__after drawCanvas__after__form--label"%>
      <%=f.text_field :department,class:"drawCanvas__after drawCanvas__after--input", placeholder:"部署名を入力"%>
      </div>
      <div class="drawCanvas__after drawCanvas__after__form__row">
      <%=f.label :住所,class:"drawCanvas__after drawCanvas__after__form--label"%>
      <%=f.text_field :address,class:"drawCanvas__after drawCanvas__after--input", placeholder:"住所を入力"%>
      </div>
      <div class="drawCanvas__after drawCanvas__after__form__row">
      <%=f.label :電話番号,class:"drawCanvas__after drawCanvas__after__form--label"%>
      <%=f.text_field :tel,class:"drawCanvas__after drawCanvas__after--input", placeholder:"電話番号を入力"%>
      </div>
      <div class="drawCanvas__after drawCanvas__after__form__row">
      <%=f.label :メールアドレス,class:"drawCanvas__after drawCanvas__after__form--label"%>
      <%=f.text_field :email,class:"drawCanvas__after drawCanvas__after--input", placeholder:"メールアドレスを入力"%>
      </div>
      <%=f.hidden_field :apiresulttext,class:"drawCanvas__after drawCanvas__after__form",id: "hiddenapiresulttext"%>
      <%=f.hidden_field :apiresulthash,class:"drawCanvas__after drawCanvas__after__form"%>
      <%=f.submit "名刺データを作成",id:"drawCanvas__after__form--submitbtn",class:"drawCanvas__after" %>
      <%end%>
    </div>
    <script>
      
      // getUserMedia が使えないときは、『getUserMedia()が利用できないブラウザです』と言ってね。
      if (typeof navigator.mediaDevices.getUserMedia !== 'function') {
          const err = new Error('getUserMedia()が利用できないブラウザです');
          alert(`${err.name} ${err.message}`);
          throw err;
      }

      // 操作する画面エレメント変数定義します。
      const $video = document.getElementById('video_area');  // 映像表示エリア

      // スタートボタン押下まちでなく、このページが開かれたら(そしてDOMの読み込みが完了したら)カメラが起動します。
      document.addEventListener('DOMContentLoaded', () => {
          navigator.mediaDevices.getUserMedia({ video: true, audio: false })
          .then(stream => $video.srcObject = stream)
          .catch(err => alert(`${err.name} ${err.message}`));
      }, false);

      function buildHTMLbeforecreate(DuplexCards_inGroup,DuplexCards_inUser){
        var returnHTML=``;
        if ((DuplexCards_inGroup.length > 0)||(DuplexCards_inUser.length > 0)){
          returnHTML+=`<span class="animationEmRed">${(DuplexCards_inGroup.length)+(DuplexCards_inUser.length)}件の名刺と重複していると思われます。</span><br>所属グループ内やあなたがすでに登録した名刺と重複すると、エピソードの記入に支障がでるおそれがあります。<br>撮影した名刺を登録して問題がないか確認してください。<div class="searchresults__row">
              <input type="text" class="searchresults__row--name" readonly="true" value="名前">
              </input>
              <input type="text" class="searchresults__row--company" readonly="true" value="会社名">
              </input>
              <input type="text" class="searchresults__row--department" readonly="true" value="部署名">
              </input>
              <input type="text" class="searchresults__row--tel"  readonly="true" value="tel">
              </input>
              <input type="text" class="searchresults__row--email"  readonly="true" value="mail">
              </input>
              <div class="searchresults__row--goshowcard">
                
              </div>
        </div><hr>`;
        
          if (DuplexCards_inGroup.length > 0){
            returnHTML+=`所属グループにてすでに登録済みと思われる名刺 ${DuplexCards_inGroup.length}件`
            for (var i=0;i<DuplexCards_inGroup.length;i++){
              returnHTML+=`<div class="searchresults__row">
                    <input type="text" class="searchresults__row--name" readonly="true" value=${DuplexCards_inGroup[i].name}>
                    </input>
                    <input type="text" class="searchresults__row--company" readonly="true" value=${DuplexCards_inGroup[i].company}>
                    </input>
                    <input type="text" class="searchresults__row--department" readonly="true" value=${DuplexCards_inGroup[i].department}>
                    </input>
                    <input type="text" class="searchresults__row--tel" readonly="true" value=${DuplexCards_inGroup[i].tel}>
                    </input>
                    <input type="text" class="searchresults__row--email" readonly="true" value=${DuplexCards_inGroup[i].email}>
                    </input>
                    
                    <a href="/cards/${DuplexCards_inGroup[i].id}" class="searchresults__row--goshowcard">詳細確認</a>
              </div><hr>`
              ;
              }
          }
          if (DuplexCards_inUser.length > 0){
            returnHTML+=`あなたが個人として登録済みと思われる名刺 ${DuplexCards_inUser.length}件`
            for (var i=0;i<DuplexCards_inUser.length;i++){
              returnHTML+=`<div class="searchresults__row">
                    <input type="text" class="searchresults__row--name" readonly="true" value=${DuplexCards_inUser[i].name}>
                    </input>
                    <input type="text" class="searchresults__row--company" readonly="true" value=${DuplexCards_inUser[i].company}>
                    </input>
                    <input type="text" class="searchresults__row--department" readonly="true" value=${DuplexCards_inUser[i].department}>
                    </input>
                    <input type="text" class="searchresults__row--tel" readonly="true" value=${DuplexCards_inUser[i].tel}>
                    </input>
                    <input type="text" class="searchresults__row--email" readonly="true" value=${DuplexCards_inUser[i].email}>
                    </input>
                    
                    <a href="/cards/${DuplexCards_inUser[i].id}" class="searchresults__row--goshowcard">詳細確認</a>
              </div><hr>`;
              }
          }
          returnHTML+=`<span class="drawCanvas__after__createbeforesearchresults--confbtn" id="create_beforesearch--confbtn"onclick="go_step4()">重複に問題がないため続ける</span><span class="drawCanvas__after__createbeforesearchresults--reloadbtn id="winreloadbtn" onclick="pagereload()">別の画像を使用する</span>`;
        }else{
          // この領域は、「これから作成しようとする名刺データが、所属グループとも、ユーザ個人にも重複してはいない」場合になりますが、その際はHTMLを生成しないので、空です。
        }
        return returnHTML;
      }
      // 「撮影」ボタンが押されたら「<canvas id="capture_image">」に映像のコマ画像を表示します。
      function go_step2() {

          var canvas_capture_image = document.getElementById('capture_image');
          var cci = canvas_capture_image.getContext('2d');
          var va = document.getElementById('video_area');

          canvas_capture_image.width  = va.videoWidth;
          canvas_capture_image.height = va.videoHeight;
          cci.drawImage(va, 0, 0);  // canvasに『「静止画取得」ボタン』押下時点の画像を描画。
          // 撮影確認領域と撮影用ボタンを排除
          $('.newcamera__step1').css('display','none');
          $('.newcamera__step2').css('display','block');
          $('.newcamera__step3').css('display','none');
          $('.newcamera__step4').css('display','none');
          $('#drawCanvas').css('display','block');
      }
      function rebert_step1(){
        // 取り直しボタンを押されたときの挙動
        $('.newcamera__step1').css('display','block');
        $('.newcamera__step2').css('display','none');
        $('.newcamera__step3').css('display','none');
        $('#createbeforesearchresults').css('display','none');
        $('#createbeforesearchresults').empty();
        $('.newcamera__step4').css('display','none');
      }
      function pagereload(){
        location.reload();
      }
      function go_step4(){
        $('.newcamera__step3__warning').css('display','none');
        $('.newcamera__step4').css('display','block');
      }
      function drawCanvas(){
        // 使用する写真が決定したときの挙動
        var canvas = $('#capture_image').get(0);
        if (canvas.getContext){ // 未サポートブラウザでの実行を抑止
          var ctx = canvas.getContext('2d');
          // 描画用のコードを記述
        }
        // 取得した画像のbase64化
        var canvasbase64 = canvas.toDataURL('image/png');
        var splited_canvasbase64 = canvasbase64.split(",");
        // base64化されたデータのうち、GoogleCloudVisionAPIへと投げたいデータのみに分けるため","で配列分けし、[1]要素をajaxで渡します。
        
        // ajax通信開始
        $.ajax({
        url: '/cards/createajax',
        type: "POST",
        data: {test: splited_canvasbase64[1]},
        dataType: 'json',
        // processData: false,
        // contentType: false,
      }).done(function(data){
        // ajax通信完了後です。data.hashdescriptionには認識後の文字データが入っています。
        // フォームを出現させ、認識結果の表示と記入用フォームがでてきます。
        $('#base64result').text(data.hashdescription);
        $('.newcamera__step3').css('display','block');
        $('#hiddenapiresulttext').val(data.hashdescription);
        $('#drawCanvas').css('display','none');
        $.ajax({
        // ここは新しく名刺を作る際に検索をかけて、グループ内に同様な名刺がないかを調べます。
        // url: '/cards/searchbeforecreatecard',
        url: '/cards/searchajax',
        type: "POST",
        data: {test: data.hashdescription},
        dataType: 'json',
        }).done(function(data){
          if((data.cards_inGroup.length > 0) ||(data.cards_inUser.length > 0)){
            // data.cards_inGroupがこれから登録しようとしている名刺がグループ内で重複している場合のデータ
            // data.cards_inUserがこれから登録しようとしている名刺がユーザ個人として登録しているなかで重複している場合のデータ
            // これらを使用して重複している可能性のあるデータを表示します。
            var html=buildHTMLbeforecreate(data.cards_inGroup,data.cards_inUser);
            $('#createbeforesearchresults').empty();
            $('#createbeforesearchresults').append(html);
            $('#createbeforesearchresults').css('display','block');
          }else{
            // 重複していないなら、入力用フォームを表示します。
            go_step4();
          }
        }).fail(function(){
          alert("エラーが発生しました。名刺の重複登録の可能性を検索中にエラーが発生しました。このメッセージの後、ページを再読み込みします。");
          location.reload();
        });
      }).fail(function(){
        alert("エラーが発生しました。画像から文字を全く認識できなかった可能性があります。このメッセージの後、ページを再読み込みします。");
        location.reload();
      });
      }
    </script>
      </div>
    </div>
  </div>
</div>
<%= render 'partial/footer' %>
